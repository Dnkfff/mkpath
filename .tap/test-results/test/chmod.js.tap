TAP version 14
# Subtest: chmod-pre
    not ok 1 - t.ifError is not a function
      ---
      stack: |
        test/chmod.js:19:11
        mkpath.js:28:33
      at:
        fileName: test\chmod.js
        lineNumber: 19
        columnNumber: 11
      type: TypeError
      tapCaught: uncaughtException
      source: "    let mode = 0744;\r
      
        \    mkpath(file, mode, function (er) {\r
      
        \        t.ifError(er, 'should not error');\r
      
        ----------^
      
        \        fs.stat(file, function (er, stat) {\r
      
        \            t.ifError(er, 'should exist');\n"
      ...
    
    1..1
not ok 1 - chmod-pre # time=58.714ms
  ---
  at:
    fileName: test\chmod.js
    lineNumber: 16
    columnNumber: 1
    typeName: Object
  source: "let file = ps.join('/');\r
  
    \r
  
    test('chmod-pre', function (t) {\r
  
    ^
  
    \    let mode = 0744;\r
  
    \    mkpath(file, mode, function (er) {\n"
  ...

# Subtest: chmod
    not ok 1 - t.ifError is not a function
      ---
      stack: |
        test/chmod.js:32:11
        mkpath.js:39:13
      at:
        fileName: test\chmod.js
        lineNumber: 32
        columnNumber: 11
      type: TypeError
      tapCaught: uncaughtException
      source: "    let mode = 0755;\r
      
        \    mkpath(file, mode, function (er) {\r
      
        \        t.ifError(er, 'should not error');\r
      
        ----------^
      
        \        fs.stat(file, function (er, stat) {\r
      
        \            t.ifError(er, 'should exist');\n"
      ...
    
    1..1
not ok 2 - chmod # time=20.985ms
  ---
  at:
    fileName: test\chmod.js
    lineNumber: 29
    columnNumber: 1
    typeName: Object
  source: "});\r
  
    \r
  
    test('chmod', function (t) {\r
  
    ^
  
    \    let mode = 0755;\r
  
    \    mkpath(file, mode, function (er) {\n"
  ...

1..2
